~~~~~~~~~~~~~~~~~~~~~~~~
	* Pre-processors
~~~~~~~~~~~~~~~~~~~~~~~~
The pre-processors are read before any configuration takes place, and do not get written into the
database.  They are used to control how the database will be loaded by including addition files,
providing defines, setting templates or copying other nodes.

~~~~~~~~~~~~~~~~~~~~~~~~
	#include 'filename or filepath'
~~~~~~~~~~~~~~~~~~~~~~~~
Opens the specified files and includes them in the current loading action.

~~~~~~~~~~~~~~~~~~~~~~~~
	#define
~~~~~~~~~~~~~~~~~~~~~~~~
The define section is used to specify constants that will be used in the database.  These constants are
only in existance during the loading time, but will be shared between includes.  This section is open on
a per file basis meaning it will end if the file does, but an included file would not behave as if define
had been set:
#define
#include // this file will not inherit the define behavior
#endef

~~~~~~~~~~~~~~~~~~~~~~~~
	#endef
~~~~~~~~~~~~~~~~~~~~~~~~
Closes the define section.

~~~~~~~~~~~~~~~~~~~~~~~~
	#template 'path'
~~~~~~~~~~~~~~~~~~~~~~~~
Sets all nodes in the current scope to inherit from the node at the given path.

~~~~~~~~~~~~~~~~~~~~~~~~
	#tempend
~~~~~~~~~~~~~~~~~~~~~~~~
Ends the previously set template. Templates will naturally expire at the end of their scope so this call
is not explicitly required.

~~~~~~~~~~~~~~~~~~~~~~~~
	#copy 'path'
~~~~~~~~~~~~~~~~~~~~~~~~
Copies the node at the given path into the current scope.


~~~~~~~~~~~~~~~~~~~~~~~~
	* Nodes and Values
~~~~~~~~~~~~~~~~~~~~~~~~
Databases are made up of values.  Nodes are a special type of value that can be traversed.  For example,
"enemy.goblin.hp" would traverse "enemy" to "goblin" and return "hp".  If "enemy" or "goblin" were not
a node, an error would be thrown.  Nodes are declared with the "{" character:

node = {}

Similarly, the "}" character is used to terminate a node.  Note, you do not have to include "}" but
doing so may cause an unexpected layout of data, thus it is recommended to always terminate your
nodes.